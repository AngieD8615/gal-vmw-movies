openapi: '3.0.2'

components:
  schemas:
    movie:
      description: A single movie
      type: object
      properties:
        movie_id:
          type: integer
        title:
          type: string
          example: "Matrix"
        director:
          type: string
          example: "unknown"
        year:
          type: integer
          example: 2001
        rating:
          type: string
          enum:
            - P
            - PG
            - PG13
            - R
        genre:
          type: string
          enum:
            - horror
            - action
            - romance
            - drama
            - comedy
        reviewStars:
          type: integer
          minimum: 1
          maximum: 5
        actors:
          type: array
          items:
            $ref: '#/components/schemas/actor'

    movie-list:
      description: A list of movies
      type: object
      properties:
        movies:
          type: array
          items:
            $ref: '#/components/schemas/movie'
        size:
          type: integer

    actor:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date

    updateActorsAndStars:
      type: object
      properties:
        actors:
          type: array
          items:
            $ref: '#/components/schemas/actor'
        reviewStars:
          type: integer
          minimum: 1
          maximum: 5

info:
  title: Movies
  description: This is a movie API which provides endpoint to get/post/update/delete movies.
  version: '1.0'
servers:
  - url: https://api.movies.com/v1
paths:
  /movies:
    get:
      summary: returns a list of movies
      parameters:
        - name: actor
          in: query
          schema:
            type: string
          required: false
        - name: title
          in: query
          schema:
            type: string
          required: false
      responses:
        '200':
          description: A JSON object with movies and size properties
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/movie'
        '204':
          description: No movies found matching the search criteria


    post:
      summary: creates a list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/movie'
      responses:
        '201':
          description: created
        '400':
          description: error
  /movies/{movie_id}:
    get:
      summary: Returns a movie matching the movie_id
      parameters:
        - name: movie_id
          in: path
          required: true
          description: The ID of the movie to be returned
          schema:
            type: integer
      responses:
        '200':
          description: A movie object
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/movie'
        '204':
          description: The specified movie ID is invalid
        '400':
          description: A movie with the specified ID was not found

    patch:
      summary: Update actors, reviewStars
      parameters:
        - name: movie_id
          in: path
          required: true
          description: The ID of the movie to be updated
          schema:
            type: integer
      responses:
        '200':
          description: Movie updated
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/movie'
        '204':
          description: The specified movie ID is invalid
        '400':
          description: A movie with the specified ID was not found

    delete:
      summary: Delete a movie
      parameters:
        - name: movie_id
          in: path
          required: true
          description: The ID of the movie to be deleted
          schema:
            type: integer
      responses:
        '200':
          description: Movie deleted
        '400':
          description: Movie was not found